<?php
// $Id$

/**
 * @file
 * Implements OG invites for LDAP user provisioning.
 */

//////////////////////////////////////////////////////////////////////////////
// Core API hooks

/**
 * Implementation of hook_menu().
 */
function ldapprov_invite_og_menu() {
  return array(
    'node/%node/invite' => array(
      'title' => 'Invite',
      'page callback' => 'drupal_get_form',
      'page arguments' => array('ldapprov_invite_og_form', 1),
      'access callback' => 'ldapprov_invite_og_can_invite',
      'access arguments' => array(1),
      'type' => MENU_LOCAL_TASK,
      'weight' => 8,
    ),
  );
}

/**
 * Check if a user can invite other users to the group.
 */
function ldapprov_invite_og_can_invite($node) {
  switch ($node->og_selective) {
    case OG_OPEN:
    case OG_MODERATED:
      return og_is_group_member($node, FALSE);
      break;
    case OG_CLOSED:
    case OG_INVITE_ONLY:
      return og_is_group_admin($node);
      break;
  }
}

/**
 * Invites form.
 */
function ldapprov_invite_og_form(&$form_state, $node) {
  $form = ldapprov_invite_form();

  $form['invite']['note'] = array(
    '#value' => t('Upon registration the user will be subscribed to the group %group based on the group\'s membership settings.', array('%group' => check_plain($node->title))),
    '#weight' => 0,
  );
  $form['invite']['og'] = array(
    '#type' => 'hidden',
    '#value' => $node->nid,
  );

  return $form;
}

/**
 * Invite form validation.
 */
function ldapprov_invite_og_form_validate($form, &$form_state) {
  ldapprov_invite_form_validate($form, $form_state);
}

/**
 * Invite form submission.
 */
function ldapprov_invite_og_form_submit($form, &$form_state) {
  $node = node_load($form_state['values']['og']);
  $data = array(
    'type' => 'og',
    'gid' => $node->nid,
    'string' => t('Group !group', array('!group' => l($node->title, 'node/'. $node->nid))),
  );

  ldapprov_invite_form_submit($form, $form_state, $data);
}

//////////////////////////////////////////////////////////////////////////////
// ldapprov_invite hooks

/**
 * Implementation of hook_ldapinvite().
 */
function ldapprov_invite_og_ldapinvite($uid, &$account, $data) {
  if ($data['type'] != 'og')
    return;

  $node = node_load($data['gid']);
  if (!og_is_group_type($node->type))
    return;

  $user = user_load($uid);
  if (og_is_group_admin($node, $user)) {
    og_save_subscription($node->nid, $account->uid, array('is_active' => 1));
  }
  else if (og_is_group_member($node, FALSE, $uid)) {
    switch ($node->og_selective) {
      case OG_OPEN:
      case OG_MODERATED:
        og_subscribe_user($node->nid, $account);
        break;
    }
  }
}

